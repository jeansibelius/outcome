name: Deployment pipeline

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]
    types: [opened, synchronize]

env:
  CONTAINS_SKIP: ${{ contains(join(github.event.commits.*.message), '#skip') }}
  DEPLOYMENT_URL: https://${{secrets.HEROKU_APP_NAME}}.fly.dev

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    outputs:
      build_succeeded: ${{ steps.build_status.outputs.build_succeeded }}
      deploy_succeeded: ${{ steps.deploy_status.outputs.deploy_succeeded }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: npm ci 
        run: npm ci
      - name: lint
        run: npm run lint
      - name: build
        run: npm run build
      - id: build_status
        name: Set build status
        run: |
          echo "::set-output name=build_succeeded::true"
          echo ${{ steps.build_status.outputs.build_succeeded }}
      - name: test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          export MONGODB_URI_TEST=$MONGODB_URI
          export JWT_SECRET=$JWT_SECRET
          npm test
      - uses: superfly/flyctl-actions/setup-flyctl@master
        if: ${{ (github.event_name == 'push' && env.CONTAINS_SKIP == 'false') }}
      - run: flyctl deploy --remote-only
        if: ${{ (github.event_name == 'push' && env.CONTAINS_SKIP == 'false') }}
        name: Deploy to fly.dev 
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - id: deploy_status
        name: Set deploy status
        if: ${{ (github.event_name == 'push' && env.CONTAINS_SKIP == 'false') }}
        run: |
          echo "::set-output name=deploy_succeeded::true"
          echo ${{ steps.deploy_status.outputs.deploy_succeeded }}

  tag_release:
    needs: [build_deploy]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        if: ${{ (github.event_name == 'push' && env.CONTAINS_SKIP == 'false') }}
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor

  notify_status:
    # Run always after build_deploy, even if it fails
    if: ${{ always() }}
    needs: [build_deploy]
    runs-on: ubuntu-20.04
    steps:
      - name: Build Success
        if: ${{ needs.build_deploy.outputs.build_succeeded == 'true' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          text: "Build succeeded"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Deploy Success
        if: ${{ needs.build_deploy.outputs.deploy_succeeded == 'true' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          text: "Deployed a new version of Outcome $DEPLOYMENT_URL"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.build_deploy.outputs.build_succeeded == 'false' && needs.build_deploy.result == 'failure' }}
        with:
          severity: error
          text: "Build failed"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Deploy failure
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ needs.build_deploy.outputs.deploy_succeeded == 'false' && needs.build_deploy.result == 'failure' }}
        with:
          severity: error
          text: "Deploy failed"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
